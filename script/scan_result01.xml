<?xml version="1.0" encoding="UTF-8"?>
<results>
Extra Header Start
Extra Header End
Extra Header Start
Extra Header End
    <error file="/home/guo/iCrane0512/iCrane/src/adapter/DeviceManager.cpp" line="618" id="uninit" subid="uninitvar" severity="Serious" msg="Uninitialized variable: result" web_identify="{&quot;identify&quot;:&quot;result&quot;}" func_info="char DeviceManager::getDeviceNums ( MM_DEVICE_TYPE devType )" content="608:         break;
609:     case DEVICE_TYCAM:
610:     case DEVICE_TISCAM:
611:     case DEVICE_IPCAM:
612:         result = mpCameraManager-&gt;getCamNum(devType);
613:         break;
614:     default:
615:         MM_ERROR(&quot;No such device type %d&quot;, devType);
616:         break;
617:     }
618:     return result;
619: }
620: 
621: boost::shared_ptr&lt;CameraManager&gt; DeviceManager::getCameraManager()
622: {
623:     return mpCameraManager;
624: }
625: 
626: boost::shared_ptr&lt;LidarManager&gt; DeviceManager::getLidarManager()
627: {
628:     return mpLidarManager;
"/>
    <error file="/home/guo/iCrane0512/iCrane/src/adapter/LiDAR/LMS1xx/LMS1xx.cpp" line="106" id="bufoverrun" subid="funcRetLengthAsIndex" severity="Serious" msg="Index [len] which is returned form [read] may cause index out of bound." web_identify="{&quot;identify&quot;:&quot;len&quot;}" func_info="void LMS1xx::stopMeas ( )" content="96: void LMS1xx::stopMeas()
97: {
98:   char buf[100];
99:   sprintf(buf, &quot;%c%s%c&quot;, 0x02, &quot;sMN LMCstopmeas&quot;, 0x03);
100: 
101:   write(socket_fd_, buf, strlen(buf));
102: 
103:   int len = read(socket_fd_, buf, 100);
104:   if (buf[0] != 0x02)
105:     std::cout &lt;&lt; &quot;invalid packet recieved&quot; &lt;&lt; std::endl;
106:   buf[len] = 0;
107: }
108: 
109: status_t LMS1xx::queryStatus()
110: {
111:   char buf[100];
112:   sprintf(buf, &quot;%c%s%c&quot;, 0x02, &quot;sRN STlms&quot;, 0x03);
113: 
114:   write(socket_fd_, buf, strlen(buf));
115: 
116:   int len = read(socket_fd_, buf, 100);
"/>
    <error file="/home/guo/iCrane0512/iCrane/src/adapter/LiDAR/LMS1xx/LMS1xx.cpp" line="119" id="bufoverrun" subid="funcRetLengthAsIndex" severity="Serious" msg="Index [len] which is returned form [read] may cause index out of bound." web_identify="{&quot;identify&quot;:&quot;len&quot;}" func_info="status_t LMS1xx::queryStatus ( )" content="109: status_t LMS1xx::queryStatus()
110: {
111:   char buf[100];
112:   sprintf(buf, &quot;%c%s%c&quot;, 0x02, &quot;sRN STlms&quot;, 0x03);
113: 
114:   write(socket_fd_, buf, strlen(buf));
115: 
116:   int len = read(socket_fd_, buf, 100);
117:   if (buf[0] != 0x02)
118:     std::cout &lt;&lt; &quot;invalid packet recieved&quot; &lt;&lt; std::endl;
119:   buf[len] = 0;
120: 
121:   int ret;
122:   sscanf((buf + 10), &quot;%d&quot;, &amp;ret);
123: 
124:   return (status_t) ret;
125: }
126: 
127: void LMS1xx::login()
128: {
129:   char buf[100];
"/>
</results>